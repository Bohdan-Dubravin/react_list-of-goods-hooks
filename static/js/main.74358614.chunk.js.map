{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","showList","setShowList","list","setList","minLength","setMinLength","sortList","sortBy","sort","i1","i2","localeCompare","length","useEffect","filter","word","className","type","onClick","reverse","name","value","onChange","e","target","Array","from","_","i","map","option","item","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6GaC,EA1GO,WACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwBF,mBAASF,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAcA,SAASC,EAASC,GAChB,OAAQA,GACN,IAAK,MAGH,OAFAJ,EAAQ,YAAID,GAAMM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,OAE7CR,EACT,IAAK,SAGH,OAFAC,EAAQ,YAAID,GAAMM,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,WAE3CV,EACT,QACE,OAAOA,GAIb,OA3BAW,qBAAU,WACRV,EAAQ,UAAIN,GAAiBiB,QAAO,SAAAC,GAAI,OAAIA,EAAKH,QAAUR,QAC1D,CAACA,IAyBCJ,EAeH,sBAAKgB,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,2BACA,sBAAKA,UAAU,YAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAxCR,WACEf,EAAQ,YAAID,EAAKiB,aAoCb,qBAOA,wBACEF,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAMZ,EAAS,QAH1B,iCAOA,wBACEW,KAAK,SACLD,UAAU,yBACVE,QAAS,kBAAMf,EAAQ,GAAD,OAAKN,KAH7B,mBAOA,wBACEoB,KAAK,SACLD,UAAU,0BACVE,QAAS,kBAAMZ,EAAS,WAH1B,+BAQF,wBACEU,UAAU,qBACVI,KAAK,SACLC,MAAOjB,EACPkB,SA1EN,SAAyBC,GACvBlB,GAAckB,EAAEC,OAAOH,QAqErB,SAOII,MAAMC,KAAK,CAAEd,OAAQ,KAAM,SAACe,EAAGC,GAAJ,OAAUA,EAAI,KAAGC,KAAI,SAAAC,GAAM,OACpD,wBAAqBT,MAAOS,EAA5B,qCACwBA,IADXA,QAMnB,oBAAId,UAAU,aAAd,SACGd,EAAK2B,KAAI,SAAAE,GACR,OACE,oBAAIf,UAAU,8BAAd,SACGe,GAD8CA,WA9DvD,qBAAKf,UAAU,OAAf,SACE,wBACEC,KAAK,SACLD,UAAU,kBACVE,QAAS,kBAAMjB,GAAY,IAH7B,sBChDR+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74358614.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [showList, setShowList] = useState(false);\n  const [list, setList] = useState(goodsFromServer);\n  const [minLength, setMinLength] = useState(1);\n\n  useEffect(() => {\n    setList([...goodsFromServer].filter(word => word.length >= minLength));\n  }, [minLength]);\n\n  function changeMinLength(e: { target: { value: string; }; }) {\n    setMinLength(+e.target.value);\n  }\n\n  function reverseList() {\n    setList([...list.reverse()]);\n  }\n\n  function sortList(sortBy: string) {\n    switch (sortBy) {\n      case 'A-Z':\n        setList([...list].sort((i1, i2) => i1.localeCompare(i2)));\n\n        return list;\n      case 'length':\n        setList([...list].sort((i1, i2) => i1.length - i2.length));\n\n        return list;\n      default:\n        return list;\n    }\n  }\n\n  if (!showList) {\n    return (\n      <div className=\"main\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success\"\n          onClick={() => setShowList(true)}\n        >\n          Start\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container main\">\n      <h1 className=\"text-cente\">List of goods</h1>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={reverseList}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={() => sortList('A-Z')}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger\"\n          onClick={() => setList([...goodsFromServer])}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={() => sortList('length')}\n        >\n          Sort by length\n        </button>\n      </div>\n      <select\n        className=\"form-select select\"\n        name=\"length\"\n        value={minLength}\n        onChange={changeMinLength}\n      >\n        {\n          Array.from({ length: 10 }, (_, i) => i + 1).map(option => (\n            <option key={option} value={option}>\n              {`Min word length = ${option}`}\n            </option>\n          ))\n        }\n      </select>\n      <ul className=\"list-group\">\n        {list.map(item => {\n          return (\n            <li className=\"list-group-item text-center\" key={item}>\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}